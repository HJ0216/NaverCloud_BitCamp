#Server Port
server.address=localhost
server.port=8080

#JSP
spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp

#MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mydb?serverTimezome=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=1234

# Oracle
# jdbc.driver=oracle.jdbc.driver.OracleDriver
# jdbc.url=jdbc:oracle:thin:@localhost:1521:xe
# jdbc.username=c##java
# jdbc.password=1234

# JPA
# Schema 생성, create: 기존 테이블이 있으면 삭제 후 생성(실행 시마다 테이블이 삭제된 후 생성되어 DB에 데이터가 저장되지 않음)
#					: drop table if exists board
#			  update: 기존 테이블이 있으면 변경된 부분만 반영(create 후, 더이상 create 되지 않음 = 데이터가 쌓임)
spring.jpa.hibernate.ddl-auto=update

# DDL 생성 시, 데이터 베이스 고유의 기능 사용 여부(SELECT, INSERT, UPDATE, DELETE)
spring.jpa.generate-ddl=true

# API 호출 시 실행되는 SQL문을 콘솔에 보여줄 것인지 여부
spring.jpa.show-sql=true
# Hibernate가 생성한 SQL 쿼리를 읽기 쉽게 포맷팅하여 출력하도록 지시
spring.jpa.properties.hibernate.format_sql=true

# 사용할 데이터베이스
spring.jpa.database=mysql

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


# Oracle 상세 지정
# spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

